<html>

<head>
<title>Interface with C4.5</title>
</head>

<body>

<h1>Interface with C4.5 Example</h1>
<p><strong>Example for</strong>: Invoking C4.5 and grabbing the Decision Tree it
learns.</p>
<p>This is a simple example that introduces everything you'll need to
invoke C4.5 from your program and to retrieve a DecisionTreePtr
containing the tree that C4.5 induces.&nbsp; The Example includes a
made-up data set, a sample makefile, and a program which interfaces
with C4.5.&nbsp; The example's file are in the
<code>&lt;VFML-root&gt;/examples/c45interface/</code>
directory.&nbsp;&nbsp; This document presents the code with a detailed
commentary and some suggestions for modifications.</p>
<p>You might like to go to the <code>&lt;VFML-root&gt;/examples/c45interface/</code>
directory and get your favorite code/text editor ready.</p>
<h2>The Dataset</h2>
<p>The dataset used for the c45interface example is made-up.&nbsp; You can see
the <a href="scan-dataset.htm">scan-dataset</a> example for more information
about it.</p>
<h2>C4.5</h2>
<p>C4.5 is Ross Quinlan's excellent decision tree induction system.&nbsp; You
can download it from Professor Quinlan's homepage at <a href="http://www.cse.unsw.edu.au/~quinlan/">http://www.cse.unsw.edu.au/~quinlan/</a>.&nbsp;
You will need to download and install C4.5R8 in your path to make this example,
and VFML's C4.5 interface, work.</p>
<h2>The Makefile</h2>
<p>Glance at the makefile; the top couple lines contain information you would
need to update if you want to use the file with another project.</p>
<p>The makefile is set up to work as is for the c45interface example.&nbsp; Make
sure you've properly installed the VFML library (see the <a href="../topics/gettingstarted.htm">Getting
Started</a> section if you haven't done this yet), and changed to the <code>&lt;VFML-root&gt;/examples/c45interface/</code>
directory.&nbsp; Type 'make' to build the example program, run it by typing <code>c45interface</code>,
and look at the output.&nbsp; You should see a printout of a decision tree which
was induced by C4.5.</p>
<h2>The Code</h2>
<p>Now let's take a look at the code, load c45interface.c into your editor.</p>
<h3>Setup</h3>
<p><code>#include &quot;uwml.h&quot;<br>
#include &lt;stdio.h&gt;</code></p>
<p>These two include files will appear in just about every project build with
VFML.&nbsp;&nbsp; The first includes all the VFML interfaces, the second is
needed to work with files, something you will do in most of your VFML project.</p>
<code>
<p>int main(void) {<br>
&nbsp;&nbsp; ExampleSpecPtr es = ExampleSpecRead(&quot;test.names&quot;);<br>
&nbsp;&nbsp; ExamplePtr e;<br>
&nbsp;&nbsp; FILE *exampleIn = fopen(&quot;test.data&quot;, &quot;r&quot;);<br>
&nbsp;&nbsp;&nbsp;DecisionTreePtr dt;<br>
&nbsp;&nbsp; VoidListPtr examples = VLNew();<br>
</code>
<p>These lines load the example spec, declare an example pointer, and open the
example data file.&nbsp; The example spec is very important, it contains a
complete description of the dataset including attributes, their types and
values, and the classes.&nbsp; Your program will query the example spec to
determine how to go about working with a particular dataset, what values to
expect, and how to iterate over them.&nbsp; You will also need to pass the spec
to various VFML interfaces; it might be a good thing to make global in your
projects.</p>
<p>exampleIn is initialized to contain a file handle to the data which is
configured for reading.&nbsp; The program will read examples from this file, one
at a time, into the 'examples' list until there are no more left to read.&nbsp;
You can refer to the <a href="scan-dataset.htm">scan-dataset</a> example for
more information about how this works.</p>
<h3>Invoking C4.5</h3>
<p>
<code>   &nbsp;&nbsp; dt = C45Learn(es, examples);
</code>

<p>
The C45Learn function does the hard work in this example.&nbsp; Its
parameters are the example spec, an array of example pointers, and a count of
the number of examples contained in the array; the function interfaces with C4.5
(if C4.5 is correctly installed in you path), asks it to learn a decision tree
on the examples contained in the array, and returns the induced tree.&nbsp; You
are responsible for the memory used by the returned tree and should call
<code>DecisionTreeFree(dt)</code> when done with the tree.
<p>Finally the program prints the induced tree to the standard output.

</body>

</html>
